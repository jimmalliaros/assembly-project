#Γιώργος Γιαννόπουλος 
#Δημήτρης Μαλλιαρός 3210112



.data
	N:	.word 5		#το μήκος του πίνακα
	array:	.space 20	#ο χώρος στον οποίο θα αποθηκευτεί ο πίνακας
	read_str:	.asciiz "Enter 5 integers: "	#συμβολοσειρά με την οποία ζητάω από τον χρήστη ναν πληκτρολογήσει πέντε ακεραίους
	str1:		.asciiz "Array[" #συμβολοσειρές για το διάβασμα και την εμφάνιση ακεραίων
	str2:		.asciiz "] = "
	
	my_space: .ascii " "					#συμβολοσειρά κενού
	newline:	.asciiz "\n"				#συμβολοσειρά αλλαγής γραμμής
	display_str:	.asciiz " Array of integers: "	#συμβολοσειρά η οποία εκτυπώνεται κατά την εμφάνιση των ακεραίων του πίνακα
	sort_str:		.asciiz " Sorting array..."		#συμβολοσειρά η οποία εκτυπώνεται κατά την ταξινόμηση του πίνακα



.text
	
	la	$a1,array #φορτώνω τη διεύθυνση του πίνακα στον καταχωρητή $a1
	lw	$a2,N		#φορτώνω το μήκος του πίνακα στον καταχωρητή $a2
	
	jal readArray #καλώ τη συνάρτηση readArray και η διεύθυνση επιστροφής αποθηκεύεται στον καταχωρητή $ra
	
	la 	$a1,array	#φορτώνω τη διεύθυνση του πίνακα στον καταχωρητή $a1
	lw	$a2,N		#φορτώνω το μήκος του πίνακα στον καταχωρητή $a2 
	jal	displayArray	#καλώ τη συνάρτηση displayArray και η διεύθυνση επιστροφής αποθηκεύεται στον καταχωρητή $ra
	
	la	$a0,newline		#φορτώνω τη διεύθυνση της συμβολοσειράς αλλαγής γραμμής στον καταχωρητή $a0
	li	$v0,4			#φορτώνω την τιμή 4 στον καταχωρητή $v0 
	syscall				#καλώ το σύστημα και αυτό εκτυπώνει τη συμβολοσειρά
	
	
	
	jal sortArray		#καλώ τη συνάρτηση sortArray και η διεύθυνση επιστροφής αποθηκεύεται στον καταχωρητή $ra
	
	la	$a0,newline
	li	$v0,4
	syscall
	
	la	$a1,array
	lw	$a2,N
	
	jal displayArray	#καλώ τη συνάρτηση displayArray και η διεύθυνση επιστροφής αποθηκεύεται στον καταχωρητή $ra
	
	
	li	$v0,10			#έξοδος από την εφαρμογή
	syscall
	
	#η διεύθυνση του πίνακα περνιέται ως όρισμα στον καταχωρητή $a1


readArray:
	move	$t0,$a2		#το μήκος της συμβολοσειράς αποθηκεύεται στον καταχωρητή $t0
	
	li		$t1,0		#ο μετρητής
	
	la		$a0,read_str		#εκτύπωση του "Enter 5 integers: "	
	li		$v0,4
	syscall
	
	la		$a0,newline	#εκτύπωση νέας γραμμής 
	li		$v0,4
	syscall
	
	read_loop:	#βρόγχος επανάληψης για να διαβάσω τους 5 ακεραίους που θα πληκτρολογήσει ο χρήστης
	
		beq	  $t1,$t0,exit	#αν ο χρήστης πληκτρολογήσει 5 ακεραίους βγες έξω από τον βρόγχο
		
		la		$a0,str1	#εκτυπώνω τη συμβολοσειρά "Array[ " 
		li		$v0,4
		syscall
		
		
		
		move	$a0,$t1		
		li		$v0,1	#εκτυπώνω τον μετρητή 
		syscall
		
		la		$a0,str2	#εκτυπώνω τη συμβολοσειρά "] = " 
		li		$v0,4
		syscall
		
		li		$v0,5		#διαβάζω από τον χρήστη έναν ακέραιο
		syscall				#ο ακέραιος αποθηκεύεται στον καταχωρητή $v0
		
		sw		$v0,($a1)	#αποθηκεύω τον ακέραιο που διάβασα στο μέρος της μνήμης που δείχνει ο καταχωρητής $a1
		add		$t1,$t1,1	#αυξάνω τον μετρητή κατά ένα 
		add		$a1,$a1,4	#πηγαίνω στην επόμενη θέση του πίνακα
		j		read_loop	#γυρνάω στην αρχή του βρόγχου
	
	
	
	
	
	


displayArray:
	
	la	$a0,display_str	#εκτύπωση της συμβολοσειράς " Array of integers: "
	li	$v0,4
	syscall
	
	
	
	move	$t0,$a2#αποθηκεύω το μήκος του πίνακα στον καταχωρητή $t0
	
	
	display_loop:
		beq	$t0,0,exit #αν έχω εκτυπώσει πέντε ακεραίους, βγες από τον βρόγχο
		lw	$a0,($a1)	#φορτώνω στον καταχωρητή $a0 τον ακέραιο που βρίσκεται στη θέση μνήμης που δείχνει ο καταχωρητής $a0
		li		$v0,1	#εκτυπώνω τον ακέραιο 
		syscall
		
		sub $t0,$t0,1	#μειώνω τον μετρητή κατά ένα
		
		
		
		add	$a1,$a1,4	#πηγαίνω στην επόμενη θέση μνήμης του πίνακα
		
		
		li	$a0,32
		li	$v0,11
		syscall
		
		j	display_loop
		
	


sortArray:
	add	$sp,$sp,-4	#αποθηκεύω τη διεύθυνση επιστροφής της συνάρτησης στη στοίβα
	sw	$ra,0($sp)
	
	
	
	la	$a0,sort_str	#εκτυπώνω τη συμβολοσειρά "Sorting array..."
	li	$v0,4	
	syscall
	
	move	$t0,$a2		#αποθηκεύω το μήκος της συμβολοσειράς στον καταχωρητή $t0
	sub	$t0,$t0,1		#μειώνω το μήκος κατά ένα για να προκύψει το n - 1
	
	li	$t2,0#i
	
	
	first_loop:				#στο πρώτο βρόγχο διατρέχω όλο τον πίνακα 
		bge	$t2,$t0,done	#αν το i είναι μεγαλύτερο ή ίσο από το n - 1,βγες από τον βρόγχο
			sub	$t4,$t0,$t2	#υπολογίζω το n - i -1 
			add	$t2,$t2,1	#αυξάνω το i κατά ένα
			li	$t3,0		#j		
			
			second_loop:
					bge	$t3,$t4,first_loop	#αν το j είναι ίσο με το  n - i - 1,πήγαινε στον πρώτο βρόγχο
					la	$a1,array	#η διεύθυνση του πίνακα
					move	$a2,$t3	#η τιμή του j 
					
					
					jal		swap	#καλώ τη συνάρτηση swap
					add	$t3,$t3,1	#αυξάνω το  j κατά ένα
					j	second_loop	#επιστρέφω στο δεύτερο βρόγχο
			
	done:
		lw	$ra,0($sp)	#φορτώνω τη διεύθυνση επιστροφής της συνάρτησης sortArray στον καταχωρητή $ra
		add	$sp,$sp,4
	
		jr	$ra			#επιστρέφω στη διεύθυνση επιστροφής της συνάρτησης sortArray
	
swap:
	move	$s2,$a2		#μετακινώ την τιμή του j στον καταχωρητή $s2
	add		$s3,$s2,1	#αποθηκεύω στον καταχωρητή $s3 το j + 1
	mul		$s2,$s2,4	#πηγαίνω στη θέση j του πίνακα
	mul		$s3,$s3,4	#πηγαίνω στη θέση j +1 του πίνακα

	lw		$t5,array($s2)	#φορτώνω στον καταχωρητή $t5 τον ακέραιο που βρίσκεται στη θέση j του πίνακα
	lw		$t6,array($s3)	#φορτώνω στο καταχωρητή $t6  τον ακέραιο που βρίσκεται στη θέση j+1 του πίνακα
	ble		$t5,$t6,exit	#αν ο ακέραιος στη θέση j είναι μικρότερος από τον ακέραιο στη θέση j+1 δεν αλλάζω τους ακεραίους
	move	$t7,$t5			#αποθηκεύω τον ακέραιο της θέσης j στον καταχωρητή $t7
	move	$t5,$t6			#μεταφέρω την τιμή του καταχωρητή $t6 που περιέχει τον ακέραιο της θέσης j + 1 στον  καταχωρητή $t5
						
	move	$t6,$t7			#μεταφέρω την τιμή του καταχωρητή $t7 που περιέχει τον ακέραιο της θέσης j  στον  καταχωρητή $t6
	sw		$t5,array($s2)	#αποθηκεύω την τιμή του καταχωρητή $t5 στη θέση j του πίνακα
	sw		$t6,array($s3)	#αποθηκεύω την τιμή του καταχωρητή $t6 στη θέση j+1 του πίνακα
	
	
		
	
	

	
	
			
	
	
	
	

exit:
	
	
	
	
	jr	$ra	#επιστρέφω στη διεύθυνση επιστροφής της συνάρτησης που έχει κληθεί